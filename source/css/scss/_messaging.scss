//
// Alert
//
.alert-container {
  margin-bottom: 3rem;
}

.alert {
  $informative-darker: darken($informative-dark, 10%);
  @include font-size($font-size-base);
  line-height: $line-height-md;
  border-left-width: 2px;
  border-color: $informative;
  background-color: $informative-light;
  color: $informative-dark;

  a,
  .alert-link {
    color: $informative-dark;
    border-bottom: $link-border-width solid $informative-dark;
    @extend .text-break;
    @include hover-focus {
      background-color: lighten($informative-light, 4%);
    }
  }

  .btn {
    @extend .btn-squared;
    &:not(:disabled):not(.disabled) {
      &.btn-primary {
        @include button-variant($background: $informative-dark, $border: $informative-dark, $hover-background: $informative-darker, $hover-border: $informative-darker, $active-background: $informative-darker, $active-border: $informative-darker, $box-shadow-color: $informative-dark);
      }

      &.btn-secondary {
        @include button-variant($background: transparent, $border: $neutral-stroke, $color: $informative-dark, $hover-background: transparent, $hover-border: $informative-dark, $hover-color: $informative-dark, $active-background: transparent, $active-border: $informative-dark, $active-color: $informative-dark, $box-shadow-color: $informative-dark);
      }

      // Tertiary
      &.btn-tertiary,
      &.btn-link {
        @include button-variant($background: transparent, $border: transparent, $color: $informative-dark, $hover-background: $informative-light, $hover-border: $informative-light, $hover-color: $informative-dark, $active-background: $informative-light, $active-border: $informative-light, $active-color: $informative-dark, $box-shadow-color: $informative-dark);
      }
    }
  }

  .alert-heading {
    color: $informative-dark;
    font-weight: $font-weight-bold;
    margin-bottom: .5rem;
    display: block;
  }

  .alert-actions {
    margin-top: .5rem;
    .btn {
      margin: .5rem 1rem .5rem 0;
    }
  }

  //add this class to .alert container to have an svg icon on the left
  &.alert-with-icon {
    display: flex;
  }

  .alert-icon-container {
    border: none;
    width: 24px;
    height: 100%;
    margin-right: 1rem;
  }

  .alert-icon-container svg,
  .close svg {
    fill: $informative-dark;
  }

  .alert-icon-container,
  .close {
    .icon {
      @include icon-color($informative-dark);
    }
  }

}

// Dismissible alerts
//
// Expand the right padding and account for the close button's positioning.

.alert-dismissible {
  padding-right: 3.5rem;

  // Adjust close link position
  .close {
    margin: .5rem;
    padding: .5rem;
  }
}


// override mixin alert-variant
@each $label, $map in $dialog-colors {
  $color-light: map-get($map, light);
  $color-dark:  map-get($map, dark);
  $color-base:  map-get($map, base);
  $color-darker: darken($color-dark, 10%);

  .alert-#{$label} {
    color: $color-dark;
    @include gradient-bg($color-light);
    border-color: $color-base;

    hr {
      border-top-color: $color-dark;
    }

    a,
    .alert-link {
      color: $color-dark;
      border-bottom: $link-border-width solid $color-dark;
      @include hover-focus {
        background-color: lighten($color-light, 4%);
      }
    }

    .alert-heading {
      color: $color-dark;
    }

    .alert-icon-container svg,
    .close svg {
      fill: $color-dark;
    }

    .alert-icon-container,
    .close {
      .icon {
        @include icon-color($color-dark);
      }
    }

    .btn {
      &:not(:disabled):not(.disabled) {
        &.btn-primary {
          @include button-variant($background: $color-dark, $border: $color-dark, $hover-background: $color-darker, $hover-border: $color-darker, $active-background: $color-darker, $active-border: $color-darker, $box-shadow-color: $color-dark);
        }

        &.btn-secondary {
          @include button-variant($background: transparent, $border: $neutral-stroke, $color: $color-dark, $hover-background: transparent, $hover-border: $color-dark, $hover-color: $color-dark, $active-background: transparent, $active-border: $color-dark, $active-color: $color-dark, $box-shadow-color: $color-dark);
        }

        // Tertiary
        &.btn-tertiary,
        &.btn-link {
          @include button-variant($background: transparent, $border: transparent, $color: $color-dark, $hover-background: $color-light, $hover-border: $color-light, $hover-color: $color-dark, $active-background: $color-light, $active-border: $color-light, $active-color: $color-dark, $box-shadow-color: $color-dark);
        }
      }
    }

  }
}

//
// Popover
//
.popover {
  border: none;
  padding: 1.25rem 1rem;
  box-shadow: $popover-box-shadow;
}

.popover-header,
.popover-body {
  padding-bottom: 1rem;

  &:last-child {
    padding-bottom: 0;
  }
}

.popover-header {
  line-height: $line-height-md;
  background-color: transparent;
  border-bottom: none;
}

.popover-body {
  line-height: $line-height-sm;
}

// Add cursor to all element containing a popover
[data-toggle="popover"] {
  cursor: pointer;
}

//
// Message bar
//
.message-bar {
  @include font-size($font-size-base);
  line-height: $line-height-md;
  background-color: $neutral-primary;
  border-left-width: 0;
  color: $white;
  display: flex;
  margin-bottom: 0;
  padding: 1rem 3.5rem 1rem 1rem;

  svg {
    fill: $white;
  }

  .icon,
  .close .icon {
    @include icon-color($white);
  }

  .message-bar-container {
    display: block;
    width: 100%;

    p {
      margin: 0;
    }

    // Default link colors and underline, overrides in mixins
    a {
      color: $white;
      border-bottom: $link-border-width solid $white;

      @include hover-focus {
        color: $white;
        background-color: $black;
      }

      &:after {
        background-color: $white;
      }
    }

  }

  .message-bar-icon-container {
    margin-right: 1rem;
  }
  .message-bar-heading {
    font-weight: $font-weight-bold;
    margin-bottom: .25rem;
  }

  .message-bar-link {
    display: inline-block;
    margin-top: .25rem;
  }

  .close {
    margin-left: auto;
    align-self: flex-start;
  }

  @include media-breakpoint-up(md) {
    .message-bar-heading {
      margin-right: 2rem;
      margin-bottom: 0;
    }
    .message-bar-link {
      margin-left: 4rem;
      margin-top: 0;
    }
    .message-bar-container {
      display: inline-flex;
      width: auto;
      margin-left: auto;
      margin-right: auto;
    }
  }

}

// Remake the color of the banner
@each $label, $map in $dialog-colors {
  $color-base: map-get($map, base);
  $color-dark: map-get($map, dark);
  $color-light: map-get($map, light);

  .message-bar-#{$label} {
    background-color: $color-base;

    @if $label == warning {
      color: $neutral-primary;
      svg {
        fill: $neutral-primary;
      }
      .icon,
      .close .icon {
        @include icon-color($neutral-primary);
      }
      .message-bar-container {
        a {
          color: $neutral-primary;
          border-bottom: $link-border-width solid $neutral-primary;
          &:after {
            background-color: $neutral-primary;
          }
          @include hover-focus {
            color: $neutral-primary;
            background-color: lighten($color-base, 10%);
          }
        }
      }
    }
    @else {
      color: $white;
      svg {
        fill: $white;
      }
      .icon,
      .close .icon {
        @include icon-color($white);
      }
      .message-bar-container {
        a {
          @include hover-focus {
            background-color: darken($color-base, 6%);
          }
        }
      }
    }
  }
}
