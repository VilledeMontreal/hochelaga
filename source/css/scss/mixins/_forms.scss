// Form control focus state
//
// Generate a customized focus state and for any input with the specified color,
// which defaults to the `$input-focus-border-color` variable.
//
// We highly encourage you to not customize the default value, but instead use
// this to tweak colors on an as-needed basis. This aesthetic change is based on
// WebKit's default styles, but applicable to a wider range of browsers. Its
// usability and accessibility should be taken into account with any change.
//
// Example usage: change the default blue border and shadow to white for better
// contrast against a dark gray background.
@mixin form-control-focus($ignore-warning: false) {
  &:focus {
    color: $input-focus-color;
    background-color: $input-focus-bg;
    border-color: $input-focus-border-color;
    outline: 0;
    @if $enable-shadows {
      @include box-shadow($input-box-shadow, $input-focus-box-shadow);
    } @else {
      // Avoid using mixin so we can pass custom focus shadow properly
      box-shadow: $input-focus-box-shadow;
    }
  }
  @include deprecate("The `form-control-focus()` mixin", "v4.4.0", "v5", $ignore-warning);
}


@mixin form-validation-state($state, $color, $icon) {
  .#{$state}-feedback {
    display: none;
    width: 100%;
    margin-top: $form-feedback-margin-top;
    @include font-size($form-feedback-font-size);
    color: $color;
  }

  .#{$state}-tooltip {
    position: absolute;
    top: 100%;
    z-index: 5;
    display: none;
    max-width: 100%; // Contain to parent when possible
    padding: $form-feedback-tooltip-padding-y $form-feedback-tooltip-padding-x;
    margin-top: .1rem;
    @include font-size($form-feedback-tooltip-font-size);
    line-height: $form-feedback-tooltip-line-height;
    color: color-yiq($color);
    background-color: rgba($color, $form-feedback-tooltip-opacity);
    @include border-radius($form-feedback-tooltip-border-radius);
  }

  .form-control {
    .was-validated &:#{$state},
    &.is-#{$state} {
      border-color: $color;

      @if $enable-validation-icons {
        padding-right: 2.5rem;
        background-image: $icon;
        background-repeat: no-repeat;
        background-position: center right .5rem;
        background-size: $icon-md;
      }

      &:focus {
        border-color: $color;
        box-shadow: 0 0 0 $input-focus-width rgba($color, .25);
      }

      ~ .#{$state}-feedback,
      ~ .#{$state}-tooltip {
        display: block;

        @if $state == invalid {
          color: $negative-dark;
          display: flex;
          .icon {
            @include icon-color($negative-dark);
          }
        }
      }
    }
  }

  // stylelint-disable-next-line selector-no-qualifying-type
  textarea.form-control {
    .was-validated &:#{$state},
    &.is-#{$state} {
      @if $enable-validation-icons {
        padding-right: 2.5rem;
        background-position: top .5625rem right .5625rem;
      }
    }
  }

  // Small input needs smaller icons and right padding
  .form-group-sm {
    .form-control {
      .was-validated &:#{$state},
      &.is-#{$state} {

        @if $enable-validation-icons {
          padding-right: 2rem;
          background-size: $icon-xs;
        }

      }
    }

    textarea.form-control {
      .was-validated &:#{$state},
      &.is-#{$state} {
        @if $enable-validation-icons {
          background-position: top .4375rem right .4375rem;
        }
      }
    }
  }

  .form-group-lg {
    .form-control {
      .was-validated &:#{$state},
      &.is-#{$state} {
        @if $enable-validation-icons {
          padding-right: 3.375rem;
          background-position: center right .9375rem;
        }
      }
    }

    textarea.form-control {
      .was-validated &:#{$state},
      &.is-#{$state} {
        @if $enable-validation-icons {
          background-position: top .9375rem right .9375rem;
        }
      }
    }
  }

  .input-group-icon {
    .was-validated &:#{$state},
    &.input-group-is-#{$state} {

      ~ .#{$state}-feedback,
      ~ .#{$state}-tooltip {
        display: block;

        @if $state == invalid {
          color: $negative-dark;
        }
      }
    }
  }

  select.form-control,
  .custom-select {
    .was-validated &:#{$state},
    &.is-#{$state} {
      border-color: $color;

      &:focus {
        border-color: $color;
        box-shadow: 0 0 0 $input-focus-width rgba($color, .25);
      }

      ~ .#{$state}-feedback,
      ~ .#{$state}-tooltip {
        display: block;

        @if $state == invalid {
          color: $negative-dark;
          display: flex;
          .icon {
            @include icon-color($negative-dark);
          }
        }
      }
    }
  }


  .form-control-file {
    .was-validated &:#{$state},
    &.is-#{$state} {
      ~ .#{$state}-feedback,
      ~ .#{$state}-tooltip {
        display: block;

        @if $state == invalid {
          color: $negative-dark;
        }
      }
    }
  }

  .form-check-input {
    .was-validated &:#{$state},
    &.is-#{$state} {

      ~ .#{$state}-feedback,
      ~ .#{$state}-tooltip {
        display: block;

        @if $state == invalid {
          color: $negative-dark;
        }

      }
    }
  }

  .custom-control-input {
    .was-validated &:#{$state},
    &.is-#{$state} {
      ~ .custom-control-label {
        &::before {
          border-color: $color;
        }
      }

      ~ .#{$state}-feedback,
      ~ .#{$state}-tooltip {
        display: block;

        @if $state == invalid {
          color: $negative-dark;
        }
      }

      &:checked {
        ~ .custom-control-label::before {
          border-color: lighten($color, 10%);
          @include gradient-bg(lighten($color, 10%));
        }
      }

      &:focus {
        ~ .custom-control-label::before {
          box-shadow: 0 0 0 $input-focus-width rgba($color, .25);
        }

        &:not(:checked) ~ .custom-control-label::before {
          border-color: $color;
        }
      }
    }
  }

  // custom file
  .custom-file-input {
    .was-validated &:#{$state},
    &.is-#{$state} {
      ~ .custom-file-label {
        border-color: $color;
      }

      ~ .#{$state}-feedback,
      ~ .#{$state}-tooltip {
        display: block;

        @if $state == invalid {
          color: $negative-dark;
        }
      }

      &:focus {
        ~ .custom-file-label {
          border-color: $color;
          box-shadow: 0 0 0 $input-focus-width rgba($color, .25);
        }
      }
    }
  }

  // VDM custom file drop
  .file-drop-container {
    .was-validated &:#{$state},
    &.is-#{$state} {
      border-color: $color;

      .btn {
        &:focus {
          border-color: $color;
          box-shadow: 0 0 0 $input-focus-width rgba($color, .25);
        }
      }
    }

    ~ .#{$state}-feedback,
    ~ .#{$state}-tooltip {
      display: block;
    }

    ~ .#{$state}-feedback {
      color: $negative-dark;
    }

  }
}